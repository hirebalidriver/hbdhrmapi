name: Deploy to Production

on:
  push:
    branches:
      - main
      - production

jobs:
  # JOB 1: Membangun dan Mendorong Docker Image
  build:
    runs-on: ubuntu-latest
    outputs:
      # Membuat output agar job lain bisa menggunakan tag image ini
      image_tag: ${{ steps.meta.outputs.tags }}
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ secrets.DOCKER_HUB_USERNAME }}/hbdhrmapi
        # Membuat 2 tag: 'latest' dan satu lagi berdasarkan hash commit (cth: a1b2c3d)
        tags: |
          type=sha,prefix=,format=short
          type=raw,value=latest

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }} # Menggunakan tag dari langkah sebelumnya
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # JOB 2: Menerapkan Image ke Server Produksi
  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: build # <-- KUNCI: Job ini hanya berjalan JIKA job 'build' SUKSES

    steps:
    - name: Deploy to Production Server
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.PRODUCTION_SERVER_IP }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        envs: ENV_FILE_CONTENT, DOCKER_HUB_USERNAME
        script: |
          # Pindah ke direktori aplikasi
          cd /root/hbdhrmapi

          # Membuat file .env di server dengan konten dari GitHub Secrets
          echo "${{ secrets.ENV_FILE_CONTENT }}" > .env
          
          # Hentikan dan hapus container lama
          docker-compose down
          
          # Tarik image terbaru dari Docker Hub
          # Perhatikan kita menggunakan tag 'latest' untuk kemudahan
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/hbdhrmapi:latest
          
          # Jalankan docker-compose up
          # Variabel DOCKER_HUB_USERNAME akan digunakan oleh docker-compose.yml
          DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }} docker-compose up -d --force-recreate --build
          
          # Jalankan migrasi database
          docker-compose exec app php artisan migrate --force
          
          # Bersihkan cache Laravel
          docker-compose exec app php artisan config:cache
          docker-compose exec app php artisan route:cache
          # docker-compose exec app php artisan view:cache

          # (Opsional) Hapus image yang tidak terpakai (dangling images)
          docker image prune -f